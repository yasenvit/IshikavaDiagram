[{"C:\\Users\\yavit\\OneDrive\\Desktop\\fishbone-diagram-canvas\\src\\index.js":"1","C:\\Users\\yavit\\OneDrive\\Desktop\\fishbone-diagram-canvas\\src\\App.js":"2","C:\\Users\\yavit\\OneDrive\\Desktop\\fishbone-diagram-canvas\\src\\components\\FooterBar.js":"3","C:\\Users\\yavit\\OneDrive\\Desktop\\fishbone-diagram-canvas\\src\\components\\GetManualData.js":"4","C:\\Users\\yavit\\OneDrive\\Desktop\\fishbone-diagram-canvas\\src\\components\\MenuButton.js":"5","C:\\Users\\yavit\\OneDrive\\Desktop\\fishbone-diagram-canvas\\src\\components\\Home.js":"6","C:\\Users\\yavit\\OneDrive\\Desktop\\fishbone-diagram-canvas\\src\\components\\GetJsonData.js":"7","C:\\Users\\yavit\\OneDrive\\Desktop\\fishbone-diagram-canvas\\src\\components\\DropMenu.js":"8","C:\\Users\\yavit\\OneDrive\\Desktop\\fishbone-diagram-canvas\\src\\components\\BuildDiagram.js":"9","C:\\Users\\yavit\\OneDrive\\Desktop\\fishbone-diagram-canvas\\src\\components\\ManualFormField.js":"10","C:\\Users\\yavit\\OneDrive\\Desktop\\fishbone-diagram-canvas\\src\\components\\GetSample.js":"11","C:\\Users\\yavit\\OneDrive\\Desktop\\fishbone-diagram-canvas\\src\\components\\JsonFormField.js":"12","C:\\Users\\yavit\\OneDrive\\Desktop\\fishbone-diagram-canvas\\src\\components\\JsonSample.js":"13","C:\\Users\\yavit\\OneDrive\\Desktop\\fishbone-diagram-canvas\\src\\components\\DisplayDiagram.js":"14","C:\\Users\\yavit\\OneDrive\\Desktop\\fishbone-diagram-canvas\\src\\components\\FontSlider.js":"15","C:\\Users\\yavit\\OneDrive\\Desktop\\fishbone-diagram-canvas\\src\\components\\ArrowButton.js":"16","C:\\Users\\yavit\\OneDrive\\Desktop\\fishbone-diagram-canvas\\src\\components\\SampleData.js":"17","C:\\Users\\yavit\\OneDrive\\Desktop\\fishbone-diagram-canvas\\src\\components\\utils\\Axis.js":"18","C:\\Users\\yavit\\OneDrive\\Desktop\\fishbone-diagram-canvas\\src\\components\\utils\\GetOptimalFontSize.js":"19","C:\\Users\\yavit\\OneDrive\\Desktop\\fishbone-diagram-canvas\\src\\components\\utils\\PrintGoal.js":"20","C:\\Users\\yavit\\OneDrive\\Desktop\\fishbone-diagram-canvas\\src\\components\\utils\\PrintTitle.js":"21","C:\\Users\\yavit\\OneDrive\\Desktop\\fishbone-diagram-canvas\\src\\components\\utils\\LevelBranches.js":"22","C:\\Users\\yavit\\OneDrive\\Desktop\\fishbone-diagram-canvas\\src\\components\\utils\\SplitText.js":"23","C:\\Users\\yavit\\OneDrive\\Desktop\\fishbone-diagram-canvas\\src\\components\\utils\\Branch.js":"24","C:\\Users\\yavit\\OneDrive\\Desktop\\fishbone-diagram-canvas\\src\\components\\utils\\PointAndName.js":"25","C:\\Users\\yavit\\OneDrive\\Desktop\\fishbone-diagram-canvas\\src\\components\\utils\\BranchName.js":"26","C:\\Users\\yavit\\OneDrive\\Desktop\\fishbone-diagram-canvas\\src\\components\\utils\\ChildUnderline.js":"27","C:\\Users\\yavit\\OneDrive\\Desktop\\fishbone-diagram-canvas\\src\\components\\utils\\PrintChild.js":"28"},{"size":410,"mtime":1607017883389,"results":"29","hashOfConfig":"30"},{"size":1007,"mtime":1607017997464,"results":"31","hashOfConfig":"30"},{"size":914,"mtime":1607017975191,"results":"32","hashOfConfig":"30"},{"size":8319,"mtime":1607017975195,"results":"33","hashOfConfig":"30"},{"size":731,"mtime":1607017975229,"results":"34","hashOfConfig":"30"},{"size":2748,"mtime":1607017975215,"results":"35","hashOfConfig":"30"},{"size":6313,"mtime":1607017975194,"results":"36","hashOfConfig":"30"},{"size":2373,"mtime":1607017975182,"results":"37","hashOfConfig":"30"},{"size":8083,"mtime":1607017975175,"results":"38","hashOfConfig":"30"},{"size":4367,"mtime":1607017975226,"results":"39","hashOfConfig":"30"},{"size":1274,"mtime":1607017975199,"results":"40","hashOfConfig":"30"},{"size":834,"mtime":1607017975219,"results":"41","hashOfConfig":"30"},{"size":6461,"mtime":1607017975225,"results":"42","hashOfConfig":"30"},{"size":242,"mtime":1607017975178,"results":"43","hashOfConfig":"30"},{"size":2337,"mtime":1607017975182,"results":"44","hashOfConfig":"30"},{"size":1933,"mtime":1607017975165,"results":"45","hashOfConfig":"30"},{"size":1522,"mtime":1607017975232,"results":"46","hashOfConfig":"30"},{"size":1626,"mtime":1607017975255,"results":"47","hashOfConfig":"30"},{"size":1518,"mtime":1607017975263,"results":"48","hashOfConfig":"30"},{"size":1104,"mtime":1607017975273,"results":"49","hashOfConfig":"30"},{"size":509,"mtime":1607017975275,"results":"50","hashOfConfig":"30"},{"size":550,"mtime":1607017975267,"results":"51","hashOfConfig":"30"},{"size":1357,"mtime":1607017975276,"results":"52","hashOfConfig":"30"},{"size":3575,"mtime":1607017975258,"results":"53","hashOfConfig":"30"},{"size":1897,"mtime":1607017975269,"results":"54","hashOfConfig":"30"},{"size":713,"mtime":1607017975259,"results":"55","hashOfConfig":"30"},{"size":864,"mtime":1607017975262,"results":"56","hashOfConfig":"30"},{"size":1869,"mtime":1607017975271,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"1mkqwnu",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"60"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"60"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"C:\\Users\\yavit\\OneDrive\\Desktop\\fishbone-diagram-canvas\\src\\index.js",[],["118","119"],"C:\\Users\\yavit\\OneDrive\\Desktop\\fishbone-diagram-canvas\\src\\App.js",[],"C:\\Users\\yavit\\OneDrive\\Desktop\\fishbone-diagram-canvas\\src\\components\\FooterBar.js",["120"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        backgroundColor: \"#52504f\",\r\n        height: \"5vh\",\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        color: \"rgb(214, 202, 202)\"\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n}));\r\n\r\nexport default function FooterBar(props) {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.root}>\r\n\r\n            Created by <span className=\"footer-span\">&nbsp;<a className=\"footer-span\" href=\"https://www.linkedin.com/in/yasenvit/\"> Vitaliy Yasenivskyy </a>&nbsp;</span> Â© 2020 New York\r\n\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\yavit\\OneDrive\\Desktop\\fishbone-diagram-canvas\\src\\components\\GetManualData.js",["121"],"import React, { Component } from 'react';\r\nimport BuildDiagram from './BuildDiagram';\r\nimport Button from '@material-ui/core/Button';\r\nimport ManualFormField from './ManualFormField';\r\nimport GetSample from './GetSample';\r\n\r\nexport default class GetManualData extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            inputFor: \"\",\r\n            currentValue: \"\",\r\n            previousValue: \"\",\r\n            isCreating: false,\r\n            branches: []\r\n        };\r\n        this.keyPress = this.keyPress.bind(this);\r\n    };\r\n\r\n    completeElement = () => {\r\n        this.setState({ inputFor: \"Enter Branch\" });\r\n    };\r\n\r\n    addTitle = () => {\r\n        this.setState({ inputFor: \"Title (optional)\" });\r\n    }\r\n\r\n    handleChange = () => ({ target: { value } }) => {\r\n        this.setState({\r\n            currentValue: value\r\n        });\r\n    };\r\n\r\n    getCreatedManually = () => {\r\n        this.setState(state => ({\r\n            title: \"\",\r\n            goal: \"\",\r\n            branches: [],\r\n            isCreating: true,\r\n            inputFor: \"Enter Goal\"\r\n        }));\r\n    };\r\n\r\n    keyPress(e) {\r\n        if (e.keyCode === 13) {\r\n            console.log('value', e.target.value);\r\n            this.getInput(this.state.inputFor);\r\n        };\r\n    };\r\n\r\n    getInput = name => {\r\n        const { currentValue, branches } = this.state\r\n        if (currentValue === \"\" && name !== \"Title (optional)\") {\r\n            alert(\"Empty input isn't allowed\")\r\n        } else {\r\n            if (name === \"Enter Goal\") {\r\n                this.setState({\r\n                    goal: currentValue,\r\n                    currentValue: \"\",\r\n                    inputFor: \"Enter Branch\",\r\n                })\r\n            } else if (name === \"Enter Branch\") {\r\n                this.setState(prevState => ({\r\n                    branches: [...prevState.branches, { name: currentValue, elements: [] }],\r\n                    branchName: currentValue,\r\n                    inputFor: \"Enter Element\",\r\n                    currentValue: \"\",\r\n                }))\r\n            } else if (name === \"Enter Element\") {\r\n                branches[branches.length - 1].elements.push(currentValue);\r\n                this.setState({\r\n                    branches: branches.map(object => {\r\n                        let newObj = {};\r\n                        newObj[\"name\"] = object.name;\r\n                        newObj[\"elements\"] = object.elements;\r\n                        return newObj;\r\n                    }),\r\n                    currentValue: \"\"\r\n                })\r\n            } else if (name === \"Title (optional)\") {\r\n                this.setState(state => ({\r\n                    title: currentValue,\r\n                    currentValue: \"\",\r\n                    inputFor: \"\",\r\n                }))\r\n            };\r\n        };\r\n    };\r\n\r\n    getBack = () => {\r\n        const { branches, inputFor, goal } = this.state;\r\n        let nextGoal = goal;\r\n        let lastBranch, poppedElement, lastBranchElements, lastBranchElementsLength, nextInputFor;\r\n        if (inputFor === \"Enter Goal\") {\r\n            this.setState({\r\n                inputFor: \"\",\r\n                currentValue: \"\",\r\n                previousValue: \"\",\r\n                isCreating: false,\r\n            })\r\n        } else if ((inputFor === \"Enter Branch\" && branches.length > 0) || inputFor === \"Title (optional)\") {\r\n            this.setState({ inputFor: \"Enter Element\" })\r\n        } else {\r\n            if (branches.length > 1) {\r\n                lastBranchElements = branches[branches.length - 1].elements;\r\n                lastBranchElementsLength = lastBranchElements.length;\r\n                if (lastBranchElementsLength > 0) {\r\n                    poppedElement = lastBranchElements[lastBranchElementsLength - 1];\r\n                    lastBranch = branches[branches.length - 1].name;\r\n                    lastBranchElements.pop();\r\n                    nextInputFor = \"Enter Element\";\r\n                } else {\r\n                    poppedElement = branches[branches.length - 1].name;\r\n                    lastBranch = branches[branches.length - 2].name;\r\n                    branches.pop();\r\n                    nextInputFor = \"Enter Branch\";\r\n                }\r\n            } else if (branches.length === 1) {\r\n                lastBranchElements = branches[branches.length - 1].elements;\r\n                lastBranchElementsLength = lastBranchElements.length;\r\n                if (lastBranchElementsLength > 0) {\r\n                    poppedElement = lastBranchElements[lastBranchElementsLength - 1];\r\n                    lastBranch = branches[branches.length - 1].name;\r\n                    lastBranchElements.pop();\r\n                    nextInputFor = \"Enter Element\";\r\n                } else {\r\n                    poppedElement = branches[branches.length - 1].name;\r\n                    lastBranch = \"\";\r\n                    branches.pop();\r\n                    nextInputFor = \"Enter Branch\";\r\n                }\r\n            } else if (branches.length === 0) {\r\n                nextGoal = \"\";\r\n                nextInputFor = \"Enter Goal\";\r\n            };\r\n            this.setState({\r\n                goal: nextGoal,\r\n                branches: branches,\r\n                currentValue: \"\",\r\n                branchName: lastBranch,\r\n                inputFor: nextInputFor,\r\n                previousValue: poppedElement\r\n            });\r\n        };\r\n    };\r\n\r\n    render() {\r\n        const { title, goal, branches, currentValue, inputFor,\r\n            isCreating, branchName, previousValue } = this.state;\r\n        let manualCreationButton, formField, buildCanvas, backButton;\r\n        if (!inputFor) {\r\n            manualCreationButton = (\r\n                <div className=\"site\">\r\n                    <Button\r\n                        variant=\"text\"\r\n                        style={formButtonStyle}\r\n                        color=\"primary\"\r\n                        onClick={() => { this.getCreatedManually() }}\r\n                    >\r\n                        get started\r\n                    </Button>\r\n                </div >\r\n            );\r\n        };\r\n\r\n        buildCanvas = <BuildDiagram\r\n            title={title}\r\n            goal={goal}\r\n            branches={branches}\r\n            previousValue={previousValue}\r\n            arrowButtonStyle={arrowButtonStyle}\r\n        />\r\n\r\n        if (isCreating && inputFor) {\r\n            backButton = (\r\n                <div className=\"site\">\r\n                    <Button\r\n                        variant=\"text\"\r\n                        style={formButtonStyle}\r\n                        color=\"primary\"\r\n                        onClick={() => { this.getBack() }}\r\n                    >\r\n                        back\r\n                    </Button>\r\n                </div>\r\n            );\r\n        };\r\n        formField = (<ManualFormField\r\n            goal={goal} branches={branches}\r\n            currentValue={currentValue}\r\n            inputFor={inputFor}\r\n            title={title}\r\n            getInput={this.getInput}\r\n            completeElement={this.completeElement}\r\n            isCreating={isCreating}\r\n            addTitle={this.addTitle}\r\n            formButtonStyle={formButtonStyle}\r\n            branchName={branchName}\r\n            keyPress={this.keyPress}\r\n        />);\r\n\r\n        return (\r\n            <div className=\"create\">\r\n                <div className=\"create-form\">\r\n                    <div className=\"create-form-objects\" onChange={this.handleChange(inputFor)}>\r\n                        {backButton}\r\n                        {manualCreationButton}\r\n                        {formField}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"create-container\">\r\n                    {buildCanvas}\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\nvar formButtonStyle = {\r\n    maxWidth: '200px',\r\n    maxHeight: '150px',\r\n    minWidth: '200px',\r\n    minHeight: '40px',\r\n    padding: '0px',\r\n    margin: '0px',\r\n    fontFamily: \"Computer Modern Bright\",\r\n    fontSize: '12px',\r\n    fontWeight: 750,\r\n    borderWidth: '1.6px',\r\n    backgroundColor: '#7C89BB',\r\n    color: \"whitesmoke\"\r\n};\r\n\r\nconst arrowButtonStyle = {\r\n    fontSize: \"10px\",\r\n    backgroundColor: \"#BDCDEF\",\r\n    border: \"blue\",\r\n};\r\n","C:\\Users\\yavit\\OneDrive\\Desktop\\fishbone-diagram-canvas\\src\\components\\MenuButton.js",[],"C:\\Users\\yavit\\OneDrive\\Desktop\\fishbone-diagram-canvas\\src\\components\\Home.js",[],"C:\\Users\\yavit\\OneDrive\\Desktop\\fishbone-diagram-canvas\\src\\components\\GetJsonData.js",[],"C:\\Users\\yavit\\OneDrive\\Desktop\\fishbone-diagram-canvas\\src\\components\\DropMenu.js",[],"C:\\Users\\yavit\\OneDrive\\Desktop\\fishbone-diagram-canvas\\src\\components\\BuildDiagram.js",[],"C:\\Users\\yavit\\OneDrive\\Desktop\\fishbone-diagram-canvas\\src\\components\\ManualFormField.js",[],"C:\\Users\\yavit\\OneDrive\\Desktop\\fishbone-diagram-canvas\\src\\components\\GetSample.js",[],"C:\\Users\\yavit\\OneDrive\\Desktop\\fishbone-diagram-canvas\\src\\components\\JsonFormField.js",[],"C:\\Users\\yavit\\OneDrive\\Desktop\\fishbone-diagram-canvas\\src\\components\\JsonSample.js",[],"C:\\Users\\yavit\\OneDrive\\Desktop\\fishbone-diagram-canvas\\src\\components\\DisplayDiagram.js",[],"C:\\Users\\yavit\\OneDrive\\Desktop\\fishbone-diagram-canvas\\src\\components\\FontSlider.js",[],"C:\\Users\\yavit\\OneDrive\\Desktop\\fishbone-diagram-canvas\\src\\components\\ArrowButton.js",[],"C:\\Users\\yavit\\OneDrive\\Desktop\\fishbone-diagram-canvas\\src\\components\\SampleData.js",[],"C:\\Users\\yavit\\OneDrive\\Desktop\\fishbone-diagram-canvas\\src\\components\\utils\\Axis.js",[],"C:\\Users\\yavit\\OneDrive\\Desktop\\fishbone-diagram-canvas\\src\\components\\utils\\GetOptimalFontSize.js",[],"C:\\Users\\yavit\\OneDrive\\Desktop\\fishbone-diagram-canvas\\src\\components\\utils\\PrintGoal.js",[],"C:\\Users\\yavit\\OneDrive\\Desktop\\fishbone-diagram-canvas\\src\\components\\utils\\PrintTitle.js",[],"C:\\Users\\yavit\\OneDrive\\Desktop\\fishbone-diagram-canvas\\src\\components\\utils\\LevelBranches.js",[],"C:\\Users\\yavit\\OneDrive\\Desktop\\fishbone-diagram-canvas\\src\\components\\utils\\SplitText.js",[],"C:\\Users\\yavit\\OneDrive\\Desktop\\fishbone-diagram-canvas\\src\\components\\utils\\Branch.js",[],"C:\\Users\\yavit\\OneDrive\\Desktop\\fishbone-diagram-canvas\\src\\components\\utils\\PointAndName.js",[],"C:\\Users\\yavit\\OneDrive\\Desktop\\fishbone-diagram-canvas\\src\\components\\utils\\BranchName.js",[],"C:\\Users\\yavit\\OneDrive\\Desktop\\fishbone-diagram-canvas\\src\\components\\utils\\ChildUnderline.js",[],["122","123"],"C:\\Users\\yavit\\OneDrive\\Desktop\\fishbone-diagram-canvas\\src\\components\\utils\\PrintChild.js",[],{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","severity":1,"message":"129","line":3,"column":8,"nodeType":"130","messageId":"131","endLine":3,"endColumn":14},{"ruleId":"128","severity":1,"message":"132","line":5,"column":8,"nodeType":"130","messageId":"131","endLine":5,"endColumn":17},{"ruleId":"124","replacedBy":"133"},{"ruleId":"126","replacedBy":"134"},"no-native-reassign",["135"],"no-negated-in-lhs",["136"],"no-unused-vars","'AppBar' is defined but never used.","Identifier","unusedVar","'GetSample' is defined but never used.",["135"],["136"],"no-global-assign","no-unsafe-negation"]